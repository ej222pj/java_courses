1. What is the Java Virtual Machine? What is Bytecode?
Answer: JVA (Java Virtual Machine) is the program that "runs" all programs written in Java. 
When a Java program is compiled it creates Bytecode. The JVA then interpreters the Bytecode.

2. What is the Java Classpath?
Answer: Classpath is a parameter in the JVA or the Java compiler that specifies the location of user-defined classes and packages.

3. How do you compile and run your java program without the help of an Integrated Development Environment (IDE) (e.g., an IDE like Eclipse)?
Answer: When you have Java downloaded on the computer, it's possible to run a Java program by using the command line by typing:
"javac filename" example: javac HelloWorld.java. javac both compiles and runs the program.

4. What is a JAR file?
Answer: JAR stands for Java Archive and is a package file format aggregate many Java class files. 
It also package together metadata and resources associated to the Java classes. 
Everything is put together into 1 file, used to distribute application software or libraries on the Java platform.

5. How do you declare the starting point of a Java application?
Answer: The typical implementation the the starting point is "public static void main(String[])".
The Java application launcher will always look for a "main" method to start the program.

6. What is a package? Why is important to declare classes inside packages?
Answer: Package is a grouping of related types providing access protection and name space management. 
Packages are used to avoid naming conflicts and to control access and it makes types easier to find and use.

7. What is an interface? Why is it important to not change them?
Answer: An interface is a collection of abstract methods. A class implements an interface, 
thereby inheriting the abstract methods of the interface. It may also contain constants, default methods, static methods, and nested types.

Since the class using the interface needs to implement all the methods from the interface its important that the inteface does not change.
If the interface changes the entire java program that is using the interface could break.

8. Which visibility levels are available in Java? What is the default visibility for classes, methods, and fields?
Answer: "Public", "Protected", ("No Modifier" or "Package-Private") and "Private" exists in Java. 

9. In the context of Java, what is an Exception? And what is an Error?
Answer:

10. What happened if your program terminates with an OutOfMemoryError, or NoClassDefFoundErroror NullPointerException?
Answer:

11. How do you handle Exceptions in your program?
Answer:

12. Why is it important to test your code/application/product, before you deliver it to your customer/boss/teacher?
Answer:
13. What is JavaDoc? How do you write documentation with it?
Answer: