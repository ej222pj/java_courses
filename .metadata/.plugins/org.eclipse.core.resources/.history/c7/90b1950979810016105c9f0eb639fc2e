/**
 * @project_name 2DV600
 *
 * @package_name ej222pj_assign2.exercise_5
 * 
 * @file_name BinarySearchTree.java
 */
package ej222pj_assign2.exercise_5;

import java.util.Iterator;

/**
 * @author Eric
 *
 * @date 23 sep 2016 : @time 11:25:10
 *
 */
public class TreeWordSet implements WordSet {
	private BinarySearchTree root = null;
	private int size = 0;

	// Add word if not already added
	@Override
	public void add(Word word) {
		// TODO: check if the word exists
		if (root == null) {
			root = new BinarySearchTree(word);
		} 
		else {
			root.add(word);
	    }
		size++;
	}

	// Return true if word contained
	@Override
	public boolean contains(Word word) {
		return false;
	}

	// Return current set size
	@Override
	public int size() {
		return size;
	}

	@Override
	public Iterator<Word> iterator() {
		return null;
	}

	private class BinarySearchTree {
		Word value;
		BinarySearchTree left = null;
		BinarySearchTree right = null;

		public BinarySearchTree(Word value) {
			this.value = value;
		}

		public void add(Word word) {
			if (value.compareTo(word) > 0) {
				if (left == null) {
					left = new BinarySearchTree(word);
				} 
				else {
					left.add(word);
				}
			} 
			else if (value.compareTo(word) < 0) {
				if (right == null) {
					right = new BinarySearchTree(word);
				}
				else {
					right.add(word);
				}
			}
		}
	}
}