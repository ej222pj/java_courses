/**
 * @project_name 2DV600
 *
 * @package_name ej222pj_assign2.exercise_5
 * 
 * @file_name WordCount1Main.java
 */
package ej222pj_assign2.exercise_5;

import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.Paths;
import java.util.HashSet;
import java.util.TreeSet;
import java.util.Arrays;

/**
 * @author Eric
 *
 * @date 22 sep 2016 : @time 23:00:27
 *
 */
public class WordCount1Main {
	private static HashSet<Word> hashWords = new HashSet<>();
	private static TreeSet<Word> treeWords = new TreeSet<>();
		  
	public static void main(String[] args) {
		String filePath = args[0];
		
		try {
			Files.lines(Paths.get(filePath))
			.map(line ==> line.split("\\s+"));
			Files.lines(Paths.get(filePath))
			.map(line => line.split("\\s+"))
			.flatMap(Arrays::stream)
			.forEach(WordCount1Main::processWord);
				
			for (Word word : treeWords) {
				System.out.println(word.toString());
			}

			System.out.println(String.format("\nSize of the HashSet: %d", hashWords.size()));
			System.out.println(String.format("Size of the TreeSet: %d", treeWords.size()));

		} catch (IOException e) {
			System.out.println("Something went wrong when reading the file...");
			System.out.println("Message: " + e.getMessage());
		}
	}

	private static void processWord(String word) {
		String processedWord = word.replaceAll("[^a-zA-Z]+", "");
		Word theWord = new Word(processedWord.toLowerCase());
		hashWords.add(theWord);
		treeWords.add(theWord);
	}
}
