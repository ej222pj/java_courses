/**
 * @project_name 2DV600
 *
 * @package_name ej222pj_assign1
 * 
 * @file_name listMain.java
 */
package ej222pj_assign1;

import java.util.Iterator;

/**
 * @author Eric
 *
 * @date 9 sep 2016 : @time 17:26:38
 *
 */
public class QueueMain {
	public static void main(String[] args){
		Queue list = new Queue();

        if(list.isEmpty()) {
            System.out.println("List is Empty");
        }
        
        try {
            list.first();
        } catch(IndexOutOfBoundsException e){
            System.out.println(e.getMessage());
        }

        try {
            list.last();
        } catch(IndexOutOfBoundsException e){
            System.out.println(e.getMessage());
        }

        try {
            list.dequeue();
        } catch(IndexOutOfBoundsException e){
            System.out.println(e.getMessage());
        }

        //Should be 0
        System.out.println("List Size = " + list.size());
        
        list.enqueue(new TestNode(1, "First"));
        //Should be 1
        System.out.println("List Size = " + list.size());
        
        list.enqueue(new TestNode(2, "Second"));
        //Should be 2
        System.out.println("List Size = " + list.size());

        if (!list.isEmpty()){
            System.out.println("List Is Not Empty!");
        }

        //First object
        Object testFirst = list.first();
        System.out.println("First object..");
        TestNode test123 = ((TestNode) testFirst);
        System.out.println(test123.value);
        System.out.println(test123.name);
        
        //Last object
        Object lastObject = list.last();
        System.out.println("Last object...");
        test123 = ((TestNode) lastObject);
        System.out.println(test123.value);
        System.out.println(test123.name);

        

        // Test if the object contains in the list, should be true
        if (list.contains(test123)){
            System.out.println("Object contains in the list!");
        }

        // Test if the object contains in the list, should be false
        TestNode containTest = new TestNode(1, "hej");
        if (!list.contains(containTest)){
            System.out.println("Object doesnt exist in the list!");
        }

        Iterator it = list.iterator();

        // Try to iterate through list with listIterator
        System.out.println("Iterate through list with 'Homemade' iterator");
        while(it.hasNext()){
            Object testIterator = it.next();
            TestNode nodeIterator = ((TestNode) testIterator);
            System.out.println(nodeIterator.name + " - " + nodeIterator.value);
        }

        // Test dequeue function
        // Should return and remove first object
        // TestNode.value - 1337, TestNode.name - Equeue
        System.out.println("----------------");
        System.out.println("Delist");
        System.out.println("list size = " + list.size());
        Object removeNode = list.dequeue();
        TestNode testNode123 = ((TestNode) removeNode);
        System.out.println(testNode123.value);
        System.out.println(testNode123.name);
        System.out.println("list size = " + list.size());

        // Try to iterate through list with listIterator
        it = list.iterator();
        System.out.println("------------------");
        System.out.println("Iterate through list with 'Homemade' iterator");
        while(it.hasNext()){
            Object testIterator = it.next();
            TestNode nodeIterator = ((TestNode) testIterator);
            System.out.println(nodeIterator.name + " - " + nodeIterator.value);
        }
    }

    private static class TestNode{
        int value;
        String name;

        public TestNode(int v, String n){
            this.value = v;
            this.name = n;
        }
    }
}